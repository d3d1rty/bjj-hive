= title I18n.t('pages.events.index.title')
= description I18n.t('pages.events.index.description')
.u-Text--right
  = link_to '#', class: 'Link--primary js-search-panel-toggle' do
    %i{ class: 'fas fa-chevron-down' }
    Show Search Options
  = link_to '#', class: 'Link--primary js-search-panel-toggle', style: 'display:none;' do
    %i{ class: 'fas fa-chevron-up' }
    Hide Search Options
.SearchPanel
  = search_form_for @q, url: events_path, method: 'get', class: 'Form' do |f|
    .Form__row
      .Form__column--third
        .Form__group
          = label_tag :search_radius
          = select_tag :search_radius, options_for_select([["50 mi", 50], ["100 mi", 100], ["500 mi", 500]], params[:search_radius]), include_blank: '', class: 'InlineForm__input'
      .Form__column--twoThirds
        .Form__group
          = label_tag :location
          = text_field_tag :location, params[:location], placeholder: I18n.t('pages.events.index.location_search_placeholder'), class: 'InlineForm__input'
    .Form__row
      .Form__column--third
        .Form__group
          = label_tag :category
          = select_tag :category, options_for_select(["Class", "Conference", "Seminar", "Tournament"], params[:category]), include_blank: '', class: 'InlineForm__input'
      .Form__column--twoThirds
        .Form__group
          = f.label :name_cont_any, "Name of event"
          = f.search_field :name_cont_any, placeholder: I18n.t('pages.events.index.name_search_placeholder'), class: 'InlineForm__input'
    .Form__action
      = f.submit I18n.t('pages.events.index.search_button'), class: 'InlineForm__action Button--solid-dark'
- if signed_in? && (current_user.organizer? || current_user.admin?)
  = ribbon do
    = link_to new_user_event_path(current_user), class: 'Button--outline-primary' do
      %i{ class: 'fas fa-plus-circle' }
      = I18n.t('pages.events.index.create_button')
.Grid
  .Grid__sizer
  .Grid__gutterSizer
  - @events.each do |event|
    = render partial: 'events/event', locals: { event: event }
= paginator do
  = link_to_prev_page @events, I18n.t('pages.events.index.prev_link')
  = link_to_next_page @events, I18n.t('pages.events.index.next_link')
  %p= page_entries_info @events
